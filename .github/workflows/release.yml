name: Release & Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.semantic.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.semantic.outputs.new_release_patch_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci --ignore-scripts

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN || secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          # Use custom config that forces minor version increment
          npx semantic-release --extends ./.github/semantic-release-config.js

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: semantic-release
    if: needs.semantic-release.outputs.new_release_published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.semantic-release.outputs.new_release_version }}
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.title=Claude Flow Dagger
            org.opencontainers.image.description=Dagger module for Claude Flow CLI with non-interactive mode support
            org.opencontainers.image.vendor=Badal.io
            org.opencontainers.image.version=${{ needs.semantic-release.outputs.new_release_version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            CLAUDE_FLOW_VERSION=2.0.0-alpha.101
            VERSION=${{ needs.semantic-release.outputs.new_release_version }}
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}:${{ needs.semantic-release.outputs.new_release_version }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Create Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat << EOF > release-notes.md
          ## üê≥ Docker Image

          \`\`\`bash
          docker pull ghcr.io/${{ github.repository }}:${{ needs.semantic-release.outputs.new_release_version }}
          \`\`\`

          ### Available Tags:
          - \`latest\` - Latest stable release
          - \`${{ needs.semantic-release.outputs.new_release_version }}\` - This release
          - \`${{ needs.semantic-release.outputs.new_release_major_version }}\` - Major version
          - \`${{ needs.semantic-release.outputs.new_release_major_version }}.${{ needs.semantic-release.outputs.new_release_minor_version }}\` - Major.Minor version

          ### Multi-Architecture Support:
          - \`linux/amd64\`
          - \`linux/arm64\`
          EOF

          gh release edit v${{ needs.semantic-release.outputs.new_release_version }} \
            --notes-file release-notes.md \
            --repo ${{ github.repository }} || true