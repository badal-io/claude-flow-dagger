version: '3.8'

services:
  claude-flow:
    image: claudeflow/claude-flow-dagger:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        CLAUDE_FLOW_VERSION: ${CLAUDE_FLOW_VERSION:-2.0.0-alpha.101}
    container_name: claude-flow
    hostname: claude-flow
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - CLAUDE_FLOW_NON_INTERACTIVE=true
      - NODE_ENV=production
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - MEMORY_PROVIDER=${MEMORY_PROVIDER:-redis}
      - MEMORY_CONNECTION_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/claude_flow
    volumes:
      - ${PWD}:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.config/gcloud:/home/claude/.config/gcloud:ro
      - ~/.aws:/home/claude/.aws:ro
      - ~/.azure:/home/claude/.azure:ro
      - claude-flow-data:/data
    networks:
      - claude-net
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    command: ["-c", "npx claude-flow health && tail -f /dev/null"]
    healthcheck:
      test: ["CMD", "npx", "claude-flow", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: claude-flow-redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - claude-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: claude-flow-postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=claude_flow
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - claude-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: vault:latest
    container_name: claude-flow-vault
    hostname: vault
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    ports:
      - "8200:8200"
    networks:
      - claude-net
    restart: unless-stopped
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Dagger Engine for running Dagger pipelines
  dagger-engine:
    image: docker:dind
    container_name: claude-flow-dagger-engine
    hostname: dagger-engine
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - docker-certs:/certs
      - dagger-data:/var/lib/docker
    networks:
      - claude-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  claude-net:
    driver: bridge
    name: claude-flow-network

volumes:
  claude-flow-data:
    name: claude-flow-data
  redis-data:
    name: claude-flow-redis-data
  postgres-data:
    name: claude-flow-postgres-data
  docker-certs:
    name: claude-flow-docker-certs
  dagger-data:
    name: claude-flow-dagger-data